<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="9" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="MyArtifactSuite" duration-ms="21104" started-at="2015-11-13T18:42:06Z" finished-at="2015-11-13T18:42:27Z">
    <groups>
    </groups>
    <test name="AllSuites" duration-ms="21104" started-at="2015-11-13T18:42:06Z" finished-at="2015-11-13T18:42:27Z">
      <class name="com.mkyong.suites.SampleSuiteITest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="beforeMethod" is-config="true" duration-ms="1915" started-at="2015-11-13T13:42:06Z" finished-at="2015-11-13T13:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mkyong.suites.SampleSuiteITest.we_should_be_able_to_configure_values_from_properties_files()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="beforeMethod" is-config="true" duration-ms="1915" started-at="2015-11-13T13:42:06Z" finished-at="2015-11-13T13:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mkyong.suites.SampleSuiteITest.we_should_be_able_to_control_screensize_via_annotations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="beforeMethod" is-config="true" duration-ms="1915" started-at="2015-11-13T13:42:06Z" finished-at="2015-11-13T13:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mkyong.suites.SampleSuiteITest.we_should_be_able_to_pass_desired_urls_to_pages()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="we_should_be_able_to_pass_desired_urls_to_pages()[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="we_should_be_able_to_pass_desired_urls_to_pages" duration-ms="12876" started-at="2015-11-13T13:42:08Z" finished-at="2015-11-13T13:42:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- we_should_be_able_to_pass_desired_urls_to_pages -->
        <test-method status="PASS" signature="we_should_be_able_to_configure_values_from_properties_files()[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="we_should_be_able_to_configure_values_from_properties_files" duration-ms="2" started-at="2015-11-13T13:42:08Z" finished-at="2015-11-13T13:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- we_should_be_able_to_configure_values_from_properties_files -->
        <test-method status="PASS" signature="we_should_be_able_to_control_screensize_via_annotations()[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="we_should_be_able_to_control_screensize_via_annotations" duration-ms="13169" started-at="2015-11-13T13:42:08Z" finished-at="2015-11-13T13:42:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- we_should_be_able_to_control_screensize_via_annotations -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="afterMethod" is-config="true" duration-ms="564" started-at="2015-11-13T13:42:08Z" finished-at="2015-11-13T13:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=we_should_be_able_to_configure_values_from_properties_files status=SUCCESS method=SampleSuiteITest.we_should_be_able_to_configure_values_from_properties_files()[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="beforeMethod" is-config="true" duration-ms="1024" started-at="2015-11-13T13:42:09Z" finished-at="2015-11-13T13:42:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mkyong.suites.SampleSuiteITest.we_should_be_able_to_return_new_pages_from_pages()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="we_should_be_able_to_return_new_pages_from_pages()[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="we_should_be_able_to_return_new_pages_from_pages" duration-ms="16770" started-at="2015-11-13T13:42:10Z" finished-at="2015-11-13T13:42:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- we_should_be_able_to_return_new_pages_from_pages -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="afterMethod" is-config="true" duration-ms="560" started-at="2015-11-13T13:42:21Z" finished-at="2015-11-13T13:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=we_should_be_able_to_pass_desired_urls_to_pages status=SUCCESS method=SampleSuiteITest.we_should_be_able_to_pass_desired_urls_to_pages()[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="afterMethod" is-config="true" duration-ms="560" started-at="2015-11-13T13:42:21Z" finished-at="2015-11-13T13:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=we_should_be_able_to_control_screensize_via_annotations status=SUCCESS method=SampleSuiteITest.we_should_be_able_to_control_screensize_via_annotations()[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="beforeMethod" is-config="true" duration-ms="1026" started-at="2015-11-13T13:42:22Z" finished-at="2015-11-13T13:42:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mkyong.suites.SampleSuiteITest.we_should_be_able_to_set_the_user_agent_on_a_test_by_test_basis()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="beforeMethod" is-config="true" duration-ms="1029" started-at="2015-11-13T13:42:22Z" finished-at="2015-11-13T13:42:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mkyong.suites.SampleSuiteITest.we_should_be_able_to_view_google_with_phantom()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="afterMethod" is-config="true" duration-ms="564" started-at="2015-11-13T13:42:23Z" finished-at="2015-11-13T13:42:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=we_should_be_able_to_set_the_user_agent_on_a_test_by_test_basis status=SUCCESS method=SampleSuiteITest.we_should_be_able_to_set_the_user_agent_on_a_test_by_test_basis()[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="we_should_be_able_to_set_the_user_agent_on_a_test_by_test_basis()[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="we_should_be_able_to_set_the_user_agent_on_a_test_by_test_basis" duration-ms="0" started-at="2015-11-13T13:42:23Z" finished-at="2015-11-13T13:42:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- we_should_be_able_to_set_the_user_agent_on_a_test_by_test_basis -->
        <test-method status="PASS" signature="we_should_be_able_to_view_google_with_phantom()[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="we_should_be_able_to_view_google_with_phantom" duration-ms="635" started-at="2015-11-13T13:42:23Z" finished-at="2015-11-13T13:42:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- we_should_be_able_to_view_google_with_phantom -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="beforeMethod" is-config="true" duration-ms="1020" started-at="2015-11-13T13:42:23Z" finished-at="2015-11-13T13:42:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mkyong.suites.SampleSuiteITest.we_should_be_default_screensize_to_Phone()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="afterMethod" is-config="true" duration-ms="567" started-at="2015-11-13T13:42:24Z" finished-at="2015-11-13T13:42:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=we_should_be_able_to_view_google_with_phantom status=SUCCESS method=SampleSuiteITest.we_should_be_able_to_view_google_with_phantom()[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="beforeMethod" is-config="true" duration-ms="1020" started-at="2015-11-13T13:42:24Z" finished-at="2015-11-13T13:42:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mkyong.suites.SampleSuiteITest.we_should_get_an_error_when_calling_factory_methods_with_a_return_type_that_does_not_extend_Page()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="we_should_be_default_screensize_to_Phone()[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="we_should_be_default_screensize_to_Phone" duration-ms="645" started-at="2015-11-13T13:42:24Z" finished-at="2015-11-13T13:42:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- we_should_be_default_screensize_to_Phone -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="afterMethod" is-config="true" duration-ms="567" started-at="2015-11-13T13:42:25Z" finished-at="2015-11-13T13:42:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=we_should_be_default_screensize_to_Phone status=SUCCESS method=SampleSuiteITest.we_should_be_default_screensize_to_Phone()[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="we_should_get_an_error_when_calling_factory_methods_with_a_return_type_that_does_not_extend_Page()[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="we_should_get_an_error_when_calling_factory_methods_with_a_return_type_that_does_not_extend_Page" duration-ms="0" started-at="2015-11-13T13:42:25Z" finished-at="2015-11-13T13:42:25Z">
          <exception class="com.github.jsdevel.testng.selenium.exceptions.PageInstantiationException">
            <message>
              <![CDATA[Pages returned from com.mkyong.pages.SamplePageFactory must return instances of com.github.jsdevel.testng.selenium.AbstractPage]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.github.jsdevel.testng.selenium.exceptions.PageInstantiationException: Pages returned from com.mkyong.pages.SamplePageFactory must return instances of com.github.jsdevel.testng.selenium.AbstractPage
	at com.github.jsdevel.testng.selenium.PageFactoryProxy.invoke(PageFactoryProxy.java:43)
	at com.sun.proxy.$Proxy8.getFoo(Unknown Source)
	at com.mkyong.suites.SampleSuiteITest.we_should_get_an_error_when_calling_factory_methods_with_a_return_type_that_does_not_extend_Page(SampleSuiteITest.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- com.github.jsdevel.testng.selenium.exceptions.PageInstantiationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- we_should_get_an_error_when_calling_factory_methods_with_a_return_type_that_does_not_extend_Page -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="afterMethod" is-config="true" duration-ms="560" started-at="2015-11-13T13:42:25Z" finished-at="2015-11-13T13:42:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=we_should_get_an_error_when_calling_factory_methods_with_a_return_type_that_does_not_extend_Page status=SUCCESS method=SampleSuiteITest.we_should_get_an_error_when_calling_factory_methods_with_a_return_type_that_does_not_extend_Page()[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="beforeMethod" is-config="true" duration-ms="1018" started-at="2015-11-13T13:42:25Z" finished-at="2015-11-13T13:42:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mkyong.suites.SampleSuiteITest.we_should_get_an_error_when_initializing_a_page_that_is_not_viewable_from_the_current_url()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="we_should_get_an_error_when_initializing_a_page_that_is_not_viewable_from_the_current_url()[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="we_should_get_an_error_when_initializing_a_page_that_is_not_viewable_from_the_current_url" duration-ms="330" started-at="2015-11-13T13:42:26Z" finished-at="2015-11-13T13:42:27Z">
          <exception class="com.github.jsdevel.testng.selenium.exceptions.PageInitializationException">
            <message>
              <![CDATA[com.mkyong.pages.GoogleSearchResultsPage can not be viewed from https://google.com/asdfasdf]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.github.jsdevel.testng.selenium.exceptions.PageInitializationException: com.mkyong.pages.GoogleSearchResultsPage can not be viewed from https://google.com/asdfasdf
	at com.github.jsdevel.testng.selenium.AbstractPage.initialize(AbstractPage.java:124)
	at com.github.jsdevel.testng.selenium.PageFactoryProxy.invoke(PageFactoryProxy.java:39)
	at com.sun.proxy.$Proxy8.getSearchResultsPage(Unknown Source)
	at com.mkyong.suites.SampleSuiteITest.we_should_get_an_error_when_initializing_a_page_that_is_not_viewable_from_the_current_url(SampleSuiteITest.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- com.github.jsdevel.testng.selenium.exceptions.PageInitializationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- we_should_get_an_error_when_initializing_a_page_that_is_not_viewable_from_the_current_url -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="afterMethod" is-config="true" duration-ms="572" started-at="2015-11-13T13:42:27Z" finished-at="2015-11-13T13:42:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=we_should_be_able_to_return_new_pages_from_pages status=SUCCESS method=SampleSuiteITest.we_should_be_able_to_return_new_pages_from_pages()[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe]" name="afterMethod" is-config="true" duration-ms="566" started-at="2015-11-13T13:42:27Z" finished-at="2015-11-13T13:42:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=we_should_get_an_error_when_initializing_a_page_that_is_not_viewable_from_the_current_url status=SUCCESS method=SampleSuiteITest.we_should_get_an_error_when_initializing_a_page_that_is_not_viewable_from_the_current_url()[pri:0, instance:com.mkyong.suites.SampleSuiteITest@13969fbe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.mkyong.suites.SampleSuiteITest -->
    </test> <!-- AllSuites -->
  </suite> <!-- MyArtifactSuite -->
</testng-results>
